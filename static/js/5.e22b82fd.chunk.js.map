{"version":3,"sources":["components/hoc/witchAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm/DialogsForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","witchAuthRedirect","Component","connect","props","to","module","exports","DialogItem","path","id","className","styles","dialog","active","name","src","img","alt","Message","message","maxLength50","maxLengthCreater","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","component","Textare","Dialogs","addMessage","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogs__items","areabutton","value","newMessage","compose"],"mappings":"oGAAA,sEAKIA,EAAkB,SAACC,GACrB,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIVE,EAAoB,SAACC,GAUhC,OAFqCC,YAAQN,EAARM,EANX,SAACC,GAEzB,OAAIA,EAAML,OACH,kBAACG,EAAcE,GADG,kBAAC,IAAD,CAAUC,GAAG,gB,oBCd1CC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,WAAa,8B,sFCkB3MC,EAfI,SAACJ,GAClB,IAAIK,EAAM,YAAcL,EAAMM,GAE9B,OACE,yBAAKC,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,QAE3C,kBAAC,IAAD,CAAST,GAAII,GAAb,KAAsBL,EAAMW,KAA5B,KACA,6BAAK,yBAAKC,IAAKZ,EAAMa,IAAKC,IAAI,QCIrBC,EAXC,SAACf,GACf,OACE,yBAAKO,UAAWC,IAAOQ,SACpBhB,EAAMgB,U,iCCFPC,EAAcC,YAAiB,IAwBtBC,EALUC,YAAU,CAEjCC,KAAM,wBAFiBD,EAjBL,SAACpB,GACnB,OACE,0BAAMsB,SAAUtB,EAAMuB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUT,GACrBU,YAAY,qBACZhB,KAAK,aACLiB,UAAWC,OAEf,6BACE,6CCiBOC,EA5BC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YAExBC,EAAkBD,EAAYE,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAM0B,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,GAAIO,IAAKuB,EAAEvB,SACrGyB,EAAmBN,EAAYO,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAElC,QAMzF,OACE,yBAAKC,UAAWC,IAAO0B,SACrB,yBAAK3B,UAAWC,IAAOiC,gBACpBR,GAEH,yBAAK1B,UAAWC,IAAO+B,UACpBD,GAEH,yBAAK/B,UAAWC,IAAOkC,YACrB,kBAAC,EAAD,CAAkBpB,SAbJ,SAACqB,GACnBZ,EAAWY,EAAMC,kB,iCCCNC,sBACb9C,aARoB,SAACL,GAErB,MAAO,CACLsC,YAAatC,EAAMsC,eAKG,CAACD,iBACzBlC,IAFagD,CAGbf","file":"static/js/5.e22b82fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nexport const witchAuthRedirect = (Component) => {\r\n\r\n  const RedirectComponent = (props) => {\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>\r\n    return <Component {...props}/>\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Ducv\",\"dialogs__items\":\"Dialogs_dialogs__items__1esIq\",\"active\":\"Dialogs_active__1xZm_\",\"messages\":\"Dialogs_messages__2Sezm\",\"dialog\":\"Dialogs_dialog__3IZDg\",\"areabutton\":\"Dialogs_areabutton__3_Yj-\"};","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path =\"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={styles.dialog + \" \" + styles.active}>\r\n\r\n      <NavLink to={path}>  {props.name} </NavLink>\r\n      <div><img src={props.img} alt=\"\"/></div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={styles.message}>\r\n      {props.message}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textare} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreater, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreater(50)\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} >\r\n      <div>\r\n        <Field\r\n          validate={[required, maxLength50]}\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessage\"\r\n          component={Textare}/>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageFormRedux = reduxForm({\r\n  // a unique name for the form\r\n  form: 'dialogAddMessageForm'\r\n})(MessageForm)\r\n\r\nexport default MessageFormRedux;","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport MessageFormRedux from \"./DialogsForm/DialogsForm\";\r\n\r\n\r\nconst Dialogs = ({addMessage, dialogsPage}) => {\r\n\r\n  let dialogsElements = dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} img={d.img}/>);\r\n  let messagesElements = dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n  let addNewMessage = (value) => {\r\n    addMessage(value.newMessage)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogs__items}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={styles.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <div className={styles.areabutton}>\r\n        <MessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {witchAuthRedirect} from \"../hoc/witchAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {addMessage} from \"../../redux/dialogs-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,{addMessage}),\r\n  witchAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}